#!/usr/bin/env bash

# fail fast
set -eu

indent() {
  sed -u 's/^/       /'
}

# parse args
BUILD_DIR=$1
CACHE_DIR=$2

BP_DIR="$(cd "$(dirname "$0")" && pwd)"
OPT_DIR=$BP_DIR/../opt/

######### Install ngrok
echo -n "-----> Installing ngrok... "
mkdir -p $BUILD_DIR/.profile.d
mkdir -p $BUILD_DIR/.heroku/bin
#curl --silent --retry 3 -o ngrok.zip -L "https://dl.ngrok.com/ngrok_2.0.19_linux_amd64.zip" | indent
curl --retry 3 -o ngrok.zip -L "http://nssudamerica.intranet.com/ngrok_2.0.19_linux_amd64.zip" | indent
echo -n "-----> Installing ngrok 2a... "
echo -n $BUILD_DIR/.heroku/bin
ls -l ngrok.zip
unzip ngrok.zip -d $BUILD_DIR/.heroku/bin > /dev/null 2>&1
echo -n "-----> Installing ngrok 3... "
chmod +x $BUILD_DIR/.heroku/bin/ngrok
echo -n "-----> Installing ngrok 4... "

cat << EOF > $BUILD_DIR/.profile.d/ngrok.sh
echo -n "-----> Installing ngrok 5... "
export PATH=\$HOME/.heroku/bin:\$PATH
echo -n "-----> Installing ngrok 6... "
EOF

######### Create profile.d startup script
cp ${OPT_DIR}/sshd.sh $BUILD_DIR/.profile.d/sshd.sh

######### Install SSH launcher
cp $OPT_DIR/with_ssh $BUILD_DIR/.heroku/bin/with_ssh
chmod +x $BUILD_DIR/.heroku/bin/with_ssh

######### Configure SSH Daemon
# TODO get key from config var if available
mkdir -p $BUILD_DIR/.ssh
ssh-keygen -f $BUILD_DIR/.ssh/id_rsa -t rsa -N ''
cat $BUILD_DIR/.ssh/id_rsa.pub > $BUILD_DIR/.ssh/authorized_keys
cat << EOF > $BUILD_DIR/.ssh/sshd_config
HostKey /app/.ssh/id_rsa
AuthorizedKeysFile /app/.ssh/authorized_keys
UsePrivilegeSeparation no
EOF
